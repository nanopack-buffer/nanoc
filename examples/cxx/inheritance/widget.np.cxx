// AUTOMATICALLY GENERATED BY NANOC

#include <nanopack/reader.hxx>
#include <nanopack/writer.hxx>

#include "widget.np.hxx"

Widget::Widget(int32_t id) : id(id) {}

size_t Widget::read_from(NanoPack::Reader &reader) {
  uint8_t *buf = reader.buffer;
  int ptr = 8;

  reader.read_int32(ptr, id);
  ptr += 4;

  return ptr;
}

NanoPack::TypeId Widget::type_id() const { return TYPE_ID; }

size_t Widget::header_size() const { return 8; }

size_t Widget::write_to(NanoPack::Writer &writer, int offset) const {
  const size_t writer_size_before = writer.size();

  writer.reserve_header(8);

  writer.write_type_id(TYPE_ID, offset);

  writer.write_field_size(0, 4, offset);
  writer.append_int32(id);

  return writer.size() - writer_size_before;
}
