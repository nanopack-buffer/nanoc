// AUTOMATICALLY GENERATED BY NANOC

#include <nanopack/reader.hxx>
#include <nanopack/writer.hxx>

#include "nested_message.np.hxx"

NestedMessage::NestedMessage(std::string string_field)
    : string_field(std::move(string_field)) {}

size_t NestedMessage::read_from(NanoPack::Reader &reader) {
  uint8_t *buf = reader.buffer;
  int ptr = 8;

  const int32_t string_field_size = reader.read_field_size(0);
  reader.read_string(ptr, string_field_size, string_field);
  ptr += string_field_size;

  return ptr;
}

NanoPack::TypeId NestedMessage::type_id() const { return TYPE_ID; }

size_t NestedMessage::header_size() const { return 8; }

size_t NestedMessage::write_to(NanoPack::Writer &writer, int offset) const {
  const size_t writer_size_before = writer.size();

  writer.reserve_header(8);

  writer.write_type_id(TYPE_ID, offset);

  writer.write_field_size(0, string_field.size(), offset);
  writer.append_string(string_field);

  return writer.size() - writer_size_before;
}
