// AUTOMATICALLY GENERATED BY NANOPACK. DO NOT MODIFY BY HAND.

#ifndef PERSON_NP_HXX
#define PERSON_NP_HXX

#include <memory>
#include <nanopack/message.hxx>
#include <nanopack/nanopack.hxx>
#include <nanopack/reader.hxx>
#include <optional>
#include <string>
#include <vector>

struct Person : NanoPack::Message {
  static constexpr NanoPack::TypeId TYPE_ID = 1;

  std::string first_name;
  std::optional<std::string> middle_name;
  std::string last_name;
  int8_t age;
  std::shared_ptr<Person> other_friend;

  Person() = default;

  Person(std::string first_name, std::optional<std::string  > middle_name,
         std::string last_name, int8_t age,
         std::shared_ptr<Person> other_friend);

  Person(std::vector<uint8_t>::const_iterator begin, int &bytes_read);

  Person(const NanoPack::Reader &reader, int &bytes_read);

  [[nodiscard]] NanoPack::TypeId type_id() const override;

  [[nodiscard]] std::vector<uint8_t> data() const override;

  [[nodiscard]] std::vector<uint8_t> data_with_length_prefix() const override;
};

#endif
