// AUTOMATICALLY GENERATED BY NANOPACK. DO NOT MODIFY BY HAND.

import { NanoBufReader, NanoBufWriter, type NanoPackMessage } from "nanopack";

class Widget implements NanoPackMessage {
  public static TYPE_ID = 1676374721;

  public readonly typeId: number = 1676374721;

  public readonly headerSize: number = 8;

  constructor(public id: number) {}

  public static fromBytes(
    bytes: Uint8Array,
  ): { bytesRead: number; result: Widget } | null {
    const reader = new NanoBufReader(bytes);
    return Widget.fromReader(reader);
  }

  public static fromReader(
    reader: NanoBufReader,
  ): { bytesRead: number; result: Widget } | null {
    let ptr = 8;

    const id = reader.readInt32(ptr);
    ptr += 4;

    return { bytesRead: ptr, result: new Widget(id) };
  }

  public writeTo(writer: NanoBufWriter, offset: number = 0): number {
    let bytesWritten = 8;

    writer.writeTypeId(1676374721, offset);

    writer.appendInt32(this.id);
    writer.writeFieldSize(0, 4, offset);
    bytesWritten += 4;

    return bytesWritten;
  }

  public bytes(): Uint8Array {
    const writer = new NanoBufWriter(8);
    this.writeTo(writer);
    return writer.bytes;
  }
}

export { Widget };
